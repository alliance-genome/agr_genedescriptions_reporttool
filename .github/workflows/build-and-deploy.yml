name: Build and Deploy
on:
  release:
    types: [published]
jobs:
  deploy-to-dev:
    if: github.event.release.prerelease == true
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
    - name: Use Node8
      uses: actions/setup-node@v3
      with:
          node-version: 8
    - name: AWS credentials configuration
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - run: npm install
    - run: CI= npm run build
    - run: aws s3 rm s3://agr-reporttooldev/ --recursive
    - run: aws s3 cp build s3://agr-reporttooldev/ --recursive
    - run: aws cloudfront create-invalidation --distribution-id E1CNJ69NOIHF90 --paths "/" "/index.html" "/*.*" "/assets*" "/static*" "/images*"
  deploy-to-production:
    if: github.event.release.prerelease == false
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
    - name: Use Node8
      uses: actions/setup-node@v3
      with:
          node-version: 8
    - name: AWS credentials configuration
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - run: npm install
    - run: CI= npm run build
    - run: aws s3 rm s3://agr-reporttool/ --recursive
    - run: aws s3 cp build s3://agr-reporttool/ --recursive
    - run: aws cloudfront create-invalidation --distribution-id E28O92W8A9X4UP --paths "/" "/index.html" "/*.*" "/assets*" "/static*" "/images*"
